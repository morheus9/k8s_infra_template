name: "Terraform Deploy"

on:
  push:
    branches:
      - dev
      - test
      - main

jobs:
  terraform:
    name: "Terraform Plan and Apply"
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Setup Yandex CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Configure Environment Variables
        run: |
          echo "TF_VAR_token=${{ secrets.YC_TOKEN }}" >> ~/.bashrc
          echo "TF_VAR_cloud_id=${{ secrets.YC_CLOUD_ID }}" >> ~/.bashrc
          echo "TF_VAR_folder_id=${{ secrets.YC_FOLDER_ID }}" >> ~/.bashrc
          source ~/.bashrc

      - name: Determine Environment
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          if [ "$BRANCH_NAME" == "dev" ]; then
            echo "ENV=dev" >> $GITHUB_ENV
          elif [ "$BRANCH_NAME" == "test" ]; then
            echo "ENV=test" >> $GITHUB_ENV
          elif [ "$BRANCH_NAME" == "main" ]; then
            echo "ENV=prod" >> $GITHUB_ENV
          else
            echo "Unsupported branch: $BRANCH_NAME"
            exit 1
          fi

      - name: Terraform Init for S3
        working-directory: ./modules/s3
        run: |
          terraform init

      - name: Terraform Workspace for S3
        working-directory: ./modules/s3
        run: |
          terraform workspace select ${{ env.ENV }} || terraform workspace new ${{ env.ENV }}

      - name: Terraform Apply S3
        working-directory: ./modules/s3
        run: |
          terraform apply -auto-approve -var-file=../../environments/${{ env.ENV }}/${{ env.ENV }}.tfvars
            - name: Set up AWS credentials from S3 module output (optional)
              run: |
                cd modules/s3
                terraform init
                terraform workspace select ${{ env.ENV }} || terraform workspace new ${{ env.ENV }}
                export AWS_ACCESS_KEY_ID=$(terraform output -raw aws_access_key_id)
                export AWS_SECRET_ACCESS_KEY=$(terraform output -raw aws_secret_access_key)
                cd ../..

      - name: Terraform Init
        working-directory: .
        run: |
          terraform init \
            -backend-config=environments/${{ env.ENV }}/${{ env.ENV }}.tfbackend \
            -reconfigure

      - name: Terraform Workspace
        working-directory: .
        run: |
          terraform workspace select ${{ env.ENV }} || terraform workspace new ${{ env.ENV }}

      - name: Terraform Plan
        working-directory: .
        run: |
          terraform plan -var-file=environments/${{ env.ENV }}/${{ env.ENV }}.tfvars

      - name: Terraform Apply
        if: github.ref_name != 'main'
        working-directory: .
        run: |
          terraform apply -auto-approve -var-file=environments/${{ env.ENV }}/${{ env.ENV }}.tfvars

      - name: Terraform Apply (Prod)
        if: github.ref_name == 'main'
        working-directory: .
        run: |
          terraform apply -auto-approve -var-file=environments/${{ env.ENV }}/prod.tfvars
