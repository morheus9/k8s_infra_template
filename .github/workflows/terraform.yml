name: "Terraform Deploy"

on:
  push:
    branches:
      - dev
      - test
      - main

jobs:
  terraform_backend:
    name: "Terraform CI/CD"
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Determine Environment
        run: |
          if [ "${{ github.ref_name }}" == "dev" ]; then
            echo "ENV=dev" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "test" ]; then
            echo "ENV=test" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "main" ]; then
            echo "ENV=prod" >> $GITHUB_ENV
          else
            echo "Unsupported branch: ${{ github.ref_name }}"
            exit 1
          fi

      - name: Terraform Apply
        working-directory: .
        env:
          TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_token: ${{ secrets.YC_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cat > /tmp/.terraformrc <<EOF
          provider_installation {
            network_mirror {
              url = "https://terraform-mirror.yandexcloud.net/"
              include = ["registry.terraform.io/*/*"]
            }
            direct {
              exclude = ["registry.terraform.io/*/*"]
            }
          }
          EOF
          echo "TF_CLI_CONFIG=/tmp/.terraformrc" >> $GITHUB_ENV
          terraform init \
            -backend-config=environments/${{ env.ENV }}/${{ env.ENV }}.tfbackend \
            -reconfigure

          echo "TF_CLI_CONFIG: $TF_CLI_CONFIG"
          cat "$TF_CLI_CONFIG" 
          cat .terraform.lock.hcl

          terraform providers
          terraform workspace select ${{Ð¼ env.ENV }} || terraform workspace new ${{ env.ENV }}
          terraform plan -var-file=environments/${{ env.ENV }}/${{ env.ENV }}.tfvars
          terraform apply -auto-approve -var-file=environments/${{ env.ENV }}/${{ env.ENV }}.tfvars

      - name: Terraform Apply (Prod)
        if: github.ref_name == 'main'
        working-directory: .
        env:
          TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_token: ${{ secrets.YC_TOKEN }}
        run: |
          terraform apply -auto-approve -var-file=environments/${{ env.ENV }}/prod.tfvars
